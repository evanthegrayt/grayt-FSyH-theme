; COLORS: https://jonasjacek.github.io/colors/
; Highlight: `part that would be highlighted`
[base]

; Color: None
; Hightlight: (non colored text)
default          = none

; Color: Red3
; Highlight: `unknown-command`
unknown-token    = 124

; Color: Orchid1
; Hightlight: `;` `&&` `||`
commandseparator = 213

; Color: Plum1
; Hightlight: `>` `>>`
redirection      = 219

; Color: Plum1
; Hightlight: `<<<`
here-string-tri  = 219,underline

; Color: Plum1
; Hightlight: <<< `this text`
here-string-text = none,underline

; Color: Cyan1
; Hightlight: <<< `$var_here`
here-string-var  = 51,underline

; TODO: TESTING
exec-descriptor  = bg:10

; Color: Black
; Hightlight: `# a comment`
comment          = black,bold

; Color: Turquoise2
; Highlight: git push `origin master`
correct-subtle   = 45,bold

; Color: DarkRed
; Hightlight: git `clone`
incorrect-subtle = bg:88

; TODO: TESTING
subtle-bg        = bg:10

; (Theme used inside command substitution.)
secondary        = default

; Hightlight: eval `"echo $(( yes ))"`
recursive-base   = default

[command-point]

; Color: SeaGreen1
; Hightlight: `!` `[` `{` `case` `for` `if` `while`
reserved-word  = 85

; MediumPurple1: `((` `))`
double-paren   = 141,bold

; Green3: docker `ps`
subcommand     = 40

; Color: Green3 (underline)
; Hightlight: `ls` (assuming ls is aliased to `ls -G`
alias          = 40,underline

; Color: Green3 (underline)
; Highlight:
suffix-alias   = 40,underline

; Color: Green3 (underline)
; Highlight:
global-alias   = 40,underline

; Color: Green3
; Highlight: `builtin`
builtin        = 40,bold

; Color: Green3
; Highlight: `cdc` (assuming a function named `cdc` exists)
function       = 40,bold

; Color:
; Hightlight: `ls` `true` `mkdir` `zip` `zsh` `vim`
command        = 40

; PaleTurquoise1: `builtin` `command` `exec` `noglob` `nocorrect`
precommand     = 159

; TODO: TESTING
hashed-command = bg:10

; DarkSlateGray1: `[`
single-sq-bracket = 123

; DarkSlateGray1: `[[`
double-sq-bracket = 123,bold

[paths]

; SteelBlue1: `/path/to/file`
path          = 75,bold

; CornflowerBlue: `/`path`/`to`/`file (the slashes)
pathseparator = 69

; CornflowerBlue: `/path/to/directory`
path-to-dir   = 69,underline

; Color: SteelBlue1:
; Highlight: `/path/to/file`
globbing      = 75,underline

; TODO: TESTING
globbing-ext  = bg:10


[brackets]

; LightSkyBlue1 `(` i++ `)` (when cursor is on a brace)
paired-bracket = black,bg:153

; DeepPink3 `(` ( ( ) ) `)`
bracket-level-1 = 161

; Magenta3 ( `(` ( ) `)` )
bracket-level-2 = 162,bold

; Magenta3 ( ( `(` `)` ) )
bracket-level-3 = 163,underline

[arguments]

; DeepSkyBlue2: ls `-a`
single-hyphen-option   = 38

; DeepSkyBlue2: ls `--all`
double-hyphen-option   = 38,underline

; Color: SkyBlue1
; Highlight: echo ``ls`` (command substitution with backticks)
back-quoted-argument   = 117

; LightSeaGreen: echo `'string'`
single-quoted-argument = 37

; LightSeaGreen: echo `"string"`
double-quoted-argument = 37,bold

; LightSeaGreen: echo `$'string'`
dollar-quoted-argument = 37,underline

[in-string]

; Color: Turquoise2
; Highlight: $'`\`'...' (the backslash)
back-dollar-quoted-argument           = black,bg:45

; Turquoise2: backslash or $... in "..." (i.e. variable in string)
back-or-dollar-double-quoted-argument = 51,underline

[other]

; Cyan1: echo `$var`
variable             = 51,underline

; Cyan1: `var="string"`
assign               = 51

; Cyan1: arr=(`)` (apparently, just the second bracket?)
assign-array-bracket = 51

; Red1: `!$` `!!`
history-expansion    = 196,bold

[math]
; Color: LightSkyBlue1
; Hightlight: (( `$var` ))
mathvar = 153

; Color: Turquoise2
; Highlight: (( `1` ))
mathnum = 45

; Color: DarkRed
; Hightlight: (( `no_exist` ))
matherr = bg:52

[for-loop]

; Color: HotPink2
; Highlight: for (( `i` = 1; `i` >= 10; `i`++ ))
forvar = 169

; Color: HotPink2 (underline)
; Highlight: for (( i = `1`; i >= `10`; i++ ))
fornum = 169,underline

; Color: Plum3 (bold)
; Highlight: for (( i `=` 1; i `>=` 10; i`++` ))
foroper = 176;bold

; Color: Plum3
; Hightlight: for (( i = 1`;` i >= 10`;` i++ ))
forsep = 176

[case]

; Color: SeaGreen3
case-input       = 78,underline

case-parentheses = 78,bold

case-condition   = 78

[optarg]

; Color: MeduimOrchid3
; Highlight: command --something=`12`
optarg-number = 133

; Color: MeduimOrchid3
; Highlight: command --something=`"this string"`
optarg-string = 133,underline

